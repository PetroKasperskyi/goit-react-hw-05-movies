{"version":3,"file":"static/js/779.3d53c705.chunk.js","mappings":"6LAAO,IAAMA,EAAU,mCACVC,EAAQ,+B,8ICCRC,EAAcC,EAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,qEAMvBC,EAAcH,EAAAA,GAAAA,GAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,qIAOvBG,EAAeL,EAAAA,GAAAA,GAASM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,gGAOxBK,EAAcP,EAAAA,GAAAA,EAAQQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,iD,SCmBnC,EA9BgB,WACd,IAAQO,GAAYC,EAAAA,EAAAA,MAAZD,QACRE,GAAsCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA3CI,EAAWF,EAAA,GAAEG,EAAcH,EAAA,GAUlC,OARAI,EAAAA,EAAAA,YAAU,WACHR,GACLS,EAAAA,EAAAA,IACO,GAADC,OAAIrB,EAAAA,EAAQ,UAAAqB,OAASV,EAAO,qBAAAU,OAAoBtB,EAAAA,IACnDuB,MAAK,SAAAC,GAAA,IAAGC,EAAID,EAAJC,KAAI,OAAON,EAAeM,EAAKC,QAAQ,IAC/CC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAM,GACtC,GAAG,CAAChB,KAGFmB,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEF,EAAAA,EAAAA,KAAC7B,EAAW,CAAA+B,SACTf,EAAYgB,OAAS,EACpBhB,EAAYiB,KAAI,SAAAC,GAAC,OACfC,EAAAA,EAAAA,MAAC/B,EAAW,CAAA2B,SAAA,EACVI,EAAAA,EAAAA,MAAC7B,EAAY,CAAAyB,SAAA,CAAC,WAASG,EAAEE,OAAOC,kBAChCR,EAAAA,EAAAA,KAACrB,EAAW,CAAAuB,SAAEG,EAAEI,YAFAJ,EAAEK,GAGN,KAGhBV,EAAAA,EAAAA,KAAA,KAAAE,SAAG,iDAKb,C","sources":["api.js","components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx"],"sourcesContent":["export const API_KEY = 'f869371a40a3de8a0444f13917eeabbd';\nexport const BASE_URL = `https://api.themoviedb.org/3/`;\n\n","import styled from 'styled-components';\n\nexport const ListReviews = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 35px;\n`;\n\nexport const ItemReviews = styled.li`\n  padding: 10px;\n  border-radius: 4px;\n  border: 2px solid #a04986;\n  box-shadow: 1px 1px 5px 1px rgba(0, 0, 0, 0.24);\n`;\n\nexport const TitleReviews = styled.h3`\n  margin-bottom: 15px;\n  font-size: 18px;\n  text-align: center;\n  color: #020250;\n`;\n\nexport const TextReviews = styled.p`\n  color: #020250;\n  font-size: 18px;\n`;","import axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { BASE_URL, API_KEY } from 'api';\nimport {\n  ItemReviews,\n  ListReviews,\n  TextReviews,\n  TitleReviews,\n} from './Reviews.styled';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviewsList, setReviewsList] = useState([]);\n\n  useEffect(() => {\n    if (!movieId) return;\n    axios\n      .get(`${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}`)\n      .then(({ data }) => setReviewsList(data.results))\n      .catch(error => console.log(error));\n  }, [movieId]);\n\n  return (\n    <>\n      <ListReviews>\n        {reviewsList.length > 0 ? (\n          reviewsList.map(i => (\n            <ItemReviews key={i.id}>\n              <TitleReviews>Author: {i.author.toUpperCase()}</TitleReviews>\n              <TextReviews>{i.content}</TextReviews>\n            </ItemReviews>\n          ))\n        ) : (\n          <p>We don't have any reviews for this movie.</p>\n        )}\n      </ListReviews>\n    </>\n  );\n};\n\nexport default Reviews;\n"],"names":["API_KEY","BASE_URL","ListReviews","styled","_templateObject","_taggedTemplateLiteral","ItemReviews","_templateObject2","TitleReviews","_templateObject3","TextReviews","_templateObject4","movieId","useParams","_useState","useState","_useState2","_slicedToArray","reviewsList","setReviewsList","useEffect","axios","concat","then","_ref","data","results","catch","error","console","log","_jsx","_Fragment","children","length","map","i","_jsxs","author","toUpperCase","content","id"],"sourceRoot":""}